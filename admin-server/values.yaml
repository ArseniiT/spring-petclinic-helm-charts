replicaCount: 1

image:
  repository: "<TO_BE_FILLED>"
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "admin-server"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

service:
  type: ClusterIP
  port: 9091
  targetPort: 9091
  labels:
    release: prometheus

ingress:
  enabled: false

resources:
  requests:
    cpu: 50m
    memory: 128Mi
  limits:
    cpu: 200m
    memory: 256Mi

# Configuration des sondes - utilisent le bon port
livenessProbe:
  httpGet:
    path: /actuator/health
    port: 9091
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 5
  
readinessProbe:
  httpGet:
    path: /actuator/health
    port: 9091
  initialDelaySeconds: 45
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Variables d'environnement pour Spring Boot - GARDER Eureka mais corriger la config
env:
  - name: SERVER_PORT
    value: "9091"
  - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
    value: "http://discovery-server:8761/eureka"
  - name: CONFIG_SERVER_URL
    value: "http://config-server:8888"
  - name: SPRING_PROFILES_ACTIVE
    value: "docker"
  - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
    value: "health,info,prometheus"
  - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
    value: "true"
  - name: MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED
    value: "true"
  - name: SPRING_BOOT_ADMIN_CLIENT_PREFER_IP
    value: "false"
  - name: EUREKA_INSTANCE_HOSTNAME
    value: "admin-server"
  - name: EUREKA_INSTANCE_PREFER_IP_ADDRESS
    value: "false"

serviceMonitor:
  enabled: true
  path: /actuator/prometheus
  port: http
  interval: 15s
  scrapeTimeout: 10s
  additionalLabels:
    release: prometheus