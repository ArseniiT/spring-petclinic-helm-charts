# Default values for admin-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: "<TO_BE_FILLED>"
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: "admin-server"

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 9090

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 50m
    memory: 128Mi
  limits:
    cpu: 200m
    memory: 256Mi


# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 21
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 21
  periodSeconds: 10

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

env:
  - name: CONFIG_SERVER_URL
    value: http://config-server:8888/config
  - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
    value: http://discovery-server:8761/eureka
  - name: SPRING_BOOT_ADMIN_CLIENT_URL
    value: http://admin-server:9090
  - name: SPRING_BOOT_ADMIN_DISCOVERY_ENABLED
    value: "true"
  - name: SPRING_BOOT_ADMIN_CLIENT_PREFER_IP
    value: "false"
  - name: SPRING_BOOT_ADMIN_CLIENT_SERVICE-URL
    value: http://admin-server:9090
  - name: SPRING_BOOT_ADMIN_INSTANCE_METADATA-KEYS
    value: management.port,management.context-path
    env:
  - name: EUREKA_CLIENT_ENABLED
    value: "false"
  - name: SPRING_CLOUD_CONFIG_ENABLED
    value: "false"
  # - name: MANAGEMENT_SERVER_PORT
  #   value: "9090"
  # - name: MANAGEMENT_ENDPOINTS_WEB_BASE-PATH
  #   value: /actuator
  # - name: SPRING_BOOT_ADMIN_DISCOVERY_CONVERTER_MANAGEMENT-CONTEXT-PATH
  #   value: /actuator
  - name: SPRING_DATASOURCE_URL
    value: jdbc:h2:mem:testdb


serviceMonitor:
  enabled: true
  path: /actuator/prometheus
  port: http
  interval: 15s
  scrapeTimeout: 10s
  additionalLabels:
    release: monitoring