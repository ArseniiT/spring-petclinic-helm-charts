replicaCount: 1

image:
  repository: "<TO_BE_FILLED>"
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 8081
  targetPort: 8081
  labels:
    release: prometheus

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}

livenessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 90
  periodSeconds: 30
  timeoutSeconds: 10

readinessProbe:
  httpGet:
    path: /actuator/health
    port: http
  initialDelaySeconds: 60
  periodSeconds: 15
  timeoutSeconds: 5

autoscaling:
  enabled: false

volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}

env:
  - name: CONFIG_SERVER_URL
    # value: http://config-server:8888/config
    value: http://config-server:8888
  - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
    value: http://discovery-server:8761/eureka
  - name: MANAGEMENT_TRACING_ENABLED
    value: "false"
  - name: MANAGEMENT_ZIPKIN_TRACING_ENDPOINT
    value: ""
  - name: EUREKA_INSTANCE_PREFER_IP_ADDRESS
    value: "false"
  - name: EUREKA_INSTANCE_HOSTNAME
    value: customers-service
  - name: SPRING_BOOT_ADMIN_CLIENT_URL
    value: http://admin-server:9091
  - name: SPRING_BOOT_ADMIN_CLIENT_PREFER_IP
    value: "false"
  - name: SERVER_PORT
    value: "8081"
  - name: SPRING_PROFILES_ACTIVE
    value: "mysql"
  - name: DB_HOST
    valueFrom:
      secretKeyRef:
        name: dockerhub-credentials
        key: db_host
  - name: DB_USER
    valueFrom:
      secretKeyRef:
        name: dockerhub-credentials
        key: db_user
  - name: DB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: dockerhub-credentials
        key: db_password
  - name: DB_NAME
    valueFrom:
      secretKeyRef:
        name: dockerhub-credentials
        key: db_name
  - name: DB_PORT
    valueFrom:
      secretKeyRef:
        name: dockerhub-credentials
        key: db_port

serviceMonitor:
  enabled: true
  path: /actuator/prometheus
  port: http
  interval: 15s
  scrapeTimeout: 10s
  additionalLabels:
    release: prometheus
